package org.entitee;
// Generated 26 fï¿½vr. 2025, 12:37:11 by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * Institution generated by hbm2java
 */
@Entity
@Table(name = "institution", schema = "public")
@SequenceGenerator(name = "global_seq", sequenceName = "global_seq", allocationSize = 1)

public class Institution implements java.io.Serializable {

	private int idins;
	private Categorieinstitution categorieinstitution;
	private String libelle;
	private Integer code;
	private String datecreation;
	private Integer nombremembres;
	private String etat;
	private Set<Projet> projets = new HashSet<Projet>(0);
	private Set<Division> divisions = new HashSet<Division>(0);
	private Set<Employe> employes = new HashSet<Employe>(0);

	public Institution() {
	}

	public Institution(int idins, Categorieinstitution categorieinstitution) {
		this.idins = idins;
		this.categorieinstitution = categorieinstitution;
	}

	public Institution(int idins, Categorieinstitution categorieinstitution, String libelle, Integer code,
			String datecreation, Integer nombremembres, String etat, Set<Projet> projets, Set<Division> divisions,
			Set<Employe> employes) {
		this.idins = idins;
		this.categorieinstitution = categorieinstitution;
		this.libelle = libelle;
		this.code = code;
		this.datecreation = datecreation;
		this.nombremembres = nombremembres;
		this.etat = etat;
		this.projets = projets;
		this.divisions = divisions;
		this.employes = employes;
	}

	@Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "global_seq")

	@Column(name = "idins", unique = true, nullable = false)
	public int getIdins() {
		return this.idins;
	}

	public void setIdins(int idins) {
		this.idins = idins;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idcatins", nullable = false)
	public Categorieinstitution getCategorieinstitution() {
		return this.categorieinstitution;
	}

	public void setCategorieinstitution(Categorieinstitution categorieinstitution) {
		this.categorieinstitution = categorieinstitution;
	}

	@Column(name = "libelle", length = 254)
	public String getLibelle() {
		return this.libelle;
	}

	public void setLibelle(String libelle) {
		this.libelle = libelle;
	}

	@Column(name = "code")
	public Integer getCode() {
		return this.code;
	}

	public void setCode(Integer code) {
		this.code = code;
	}

	@Column(name = "datecreation", length = 254)
	public String getDatecreation() {
		return this.datecreation;
	}

	public void setDatecreation(String datecreation) {
		this.datecreation = datecreation;
	}

	@Column(name = "nombremembres")
	public Integer getNombremembres() {
		return this.nombremembres;
	}

	public void setNombremembres(Integer nombremembres) {
		this.nombremembres = nombremembres;
	}

	@Column(name = "etat", length = 254)
	public String getEtat() {
		return this.etat;
	}

	public void setEtat(String etat) {
		this.etat = etat;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "institution",cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<Projet> getProjets() {
		return this.projets;
	}

	public void setProjets(Set<Projet> projets) {
		this.projets = projets;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "institution",cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<Division> getDivisions() {
		return this.divisions;
	}

	public void setDivisions(Set<Division> divisions) {
		this.divisions = divisions;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "institution",cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<Employe> getEmployes() {
		return this.employes;
	}

	public void setEmployes(Set<Employe> employes) {
		this.employes = employes;
	}

}
